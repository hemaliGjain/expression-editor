[{"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/index.tsx":"1","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/containers/AppBootup/index.tsx":"2","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/store/index.tsx":"3","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/ExpressionEditor/defaultMentionStyles.ts":"4","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/Header/index.tsx":"5","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/store/home/action.ts":"6","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/reportWebVitals.ts":"7","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/ExpressionEditor/index.tsx":"8","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/VariableGenerator/index.tsx":"9","/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/Parser/index.ts":"10"},{"size":530,"mtime":1643721562890,"results":"11","hashOfConfig":"12"},{"size":322,"mtime":1643721562890,"results":"13","hashOfConfig":"12"},{"size":679,"mtime":1643721562895,"results":"14","hashOfConfig":"12"},{"size":928,"mtime":1643721562891,"results":"15","hashOfConfig":"12"},{"size":799,"mtime":1643721562892,"results":"16","hashOfConfig":"12"},{"size":201,"mtime":1643721562894,"results":"17","hashOfConfig":"12"},{"size":425,"mtime":1643721562891,"results":"18","hashOfConfig":"12"},{"size":3452,"mtime":1643721562892,"results":"19","hashOfConfig":"12"},{"size":2325,"mtime":1643721562893,"results":"20","hashOfConfig":"12"},{"size":13503,"mtime":1643879294585,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"quo1h8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/index.tsx",[],["49","50"],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/containers/AppBootup/index.tsx",[],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/store/index.tsx",[],["51","52"],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/ExpressionEditor/defaultMentionStyles.ts",[],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/Header/index.tsx",[],["53","54"],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/store/home/action.ts",[],["55","56"],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/reportWebVitals.ts",[],["57","58"],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/ExpressionEditor/index.tsx",["59"],"import React, { useCallback, useMemo, useState } from \"react\";\nimport { Mention, MentionsInput } from \"react-mentions\";\nimport { defaultMentionStyles } from \"./defaultMentionStyles\";\nimport \"./style.scss\";\nimport { Parser } from \"../Parser\";\nimport { connect } from \"react-redux\";\nimport { StoreState } from \"../../../store\";\ninterface ExpressionEditorProps {}\n\nconst ExpressionEditor = (\n  props: ExpressionEditorProps & ReturnType<typeof mapStateToProps>\n) => {\n  const [value, setValue] = useState(\"\");\n  const [logicErrorText, setLogicErrorText] = useState(\"\");\n  const hanldeAreaInputValue = (val: any) => {\n    setValue(val);\n  };\n\n  const highlighterSubString = document.getElementsByClassName(\n    \"customMentionInput__highlighter__substring\"\n  );\n\n  const dataSetForLogic = useMemo(() => {\n    let data: any = [];\n    props.availableVariables.forEach((item: string) => {\n      let obj = { id: item, display: item };\n      data.push(obj);\n    });\n    return data;\n  }, [props.availableVariables]);\n\n  const validate = useCallback(() => {\n    const parser = new Parser(value, props.availableVariables);\n    try {\n      const expr = parser.Parse();\n      const pretty = expr.PrettyMath();\n      console.log(\"expr :\", expr);\n\n      setLogicErrorText(\"\");\n    } catch (exp) {\n      console.log(\"exp :\", exp);\n\n      const errorTokenData = exp.token;\n      if (errorTokenData && highlighterSubString.length > 0) {\n        const firstPart = value.substring(0, errorTokenData.index);\n        const lastPart = value.substring(\n          errorTokenData.index,\n          errorTokenData.index + errorTokenData.text.length + 1\n        );\n\n        const finalValue = `${firstPart}<span style=\"text-decoration:underline; text-decoration-color:red;text-decoration-style: wavy; background-color: rgba(255,0,0,0.2);\" >${errorTokenData.text}</span>${lastPart}  `;\n\n        highlighterSubString[0].innerHTML = finalValue;\n      }\n\n      setLogicErrorText(exp.message);\n    }\n  }, [highlighterSubString, value, props.availableVariables]);\n\n  return (\n    <>\n      <div className=\"wrapper-expression-input\">\n        <MentionsInput\n          className=\"customMentionInput\"\n          id=\"logicTextArea\"\n          value={value}\n          onChange={(\n            event: { target: { value: string } },\n            newValue: string,\n            newPlainTextValue: string\n          ) => {\n            hanldeAreaInputValue(newPlainTextValue);\n          }}\n          style={defaultMentionStyles}\n        >\n          <Mention\n            trigger={/(?:^|)(\\$([^\\s$]*))$/} // with space = /(?:^|\\s)(\\$([^\\s\\$]*))$/\n            markup={`$[____display____]`}\n            data={dataSetForLogic}\n            displayTransform={(id, display) => `$'${display}'`}\n            appendSpaceOnAdd={true}\n          />\n        </MentionsInput>\n      </div>\n      <div className=\" h-8 mt-4 flex  text-red-700 \">{logicErrorText}</div>\n      <div className=\"flex-auto flex space-x-3\">\n        <button\n          onClick={validate}\n          className=\"focus:border-purple-500 focus:ring-1 focus:ring-purple-500 focus:outline-none w-32 h-8 mt-4 flex items-center justify-center rounded-full bg-purple-700 text-white\"\n          type=\"submit\"\n        >\n          Set\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    availableVariables: state.home.availableVariables,\n  };\n};\n\nexport default connect(mapStateToProps)(ExpressionEditor);\n",["60","61"],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/VariableGenerator/index.tsx",[],"/Users/Hemali.Gevarchand.Jain/projects/trial/expression-editor/src/routes/components/Parser/index.ts",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"64","replacedBy":"70"},{"ruleId":"66","replacedBy":"71"},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"64","replacedBy":"74"},{"ruleId":"66","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":36,"column":13,"nodeType":"78","messageId":"79","endLine":36,"endColumn":19},{"ruleId":"64","replacedBy":"80"},{"ruleId":"66","replacedBy":"81"},{"ruleId":"76","severity":1,"message":"82","line":40,"column":11,"nodeType":"78","messageId":"79","endLine":40,"endColumn":22},{"ruleId":"76","severity":1,"message":"83","line":42,"column":11,"nodeType":"78","messageId":"79","endLine":42,"endColumn":24},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],["84"],["85"],["84"],["85"],["84"],["85"],"@typescript-eslint/no-unused-vars","'pretty' is assigned a value but never used.","Identifier","unusedVar",["84"],["85"],"'numberRegex' is assigned a value but never used.","'variableRegex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]